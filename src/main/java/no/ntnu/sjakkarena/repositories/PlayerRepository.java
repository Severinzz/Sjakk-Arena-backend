package no.ntnu.sjakkarena.repositories;

import no.ntnu.sjakkarena.data.Player;
import no.ntnu.sjakkarena.exceptions.NotAbleToInsertIntoDBException;
import no.ntnu.sjakkarena.utils.DBInteractionHelper;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.dao.DataAccessException;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.jdbc.core.PreparedStatementCreator;
import org.springframework.jdbc.support.GeneratedKeyHolder;
import org.springframework.jdbc.support.KeyHolder;
import org.springframework.stereotype.Repository;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.Collection;

@Repository
public class PlayerRepository {

    @Autowired
    private JdbcTemplate jdbcTemplate;

    /**
     * Adds a new player to the database
     * @param player the player to be added
     * @return the autogenerated player id
     */
    public int addNewPlayer(Player player){
        String dbUpdateString = DBInteractionHelper.toDatabaseUpdateString(player.getName(),
                player.getTournament());
        KeyHolder keyHolder = new GeneratedKeyHolder();
        try {
            //code from https://stackoverflow.com/questions/12882874/how-can-i-get-the-autoincremented-id-when-i-insert-a-record-in-a-table-via-jdbct
            jdbcTemplate.update(
                    new PreparedStatementCreator() {
                        public PreparedStatement createPreparedStatement(Connection connection) throws SQLException {
                            PreparedStatement ps =
                                    connection.prepareStatement("INSERT INTO sjakkarena.player (`name`, `tournament`)" +
                                            " VALUES (" + dbUpdateString + ")", new String[] {"id"});
                            return ps;
                        }
                    },
                    keyHolder);
            return keyHolder.getKey().intValue();
        }
        catch(DataAccessException e){
            throw new NotAbleToInsertIntoDBException("Could not add user to database. Possible reasons: \n" +
                    "1. User is already registered in database \n" +
                    "2. Name/value pairs in JSON are missing");
        }
    }

    /**
     * Returns the name of all the players enrolled in the given tournament
     * @param tournamentId the id of the tournament where the players are enrolled
     * @return
     */
    public Collection<String> getAllPlayerNamesInTournament(int tournamentId) {
        Collection<String> names =  jdbcTemplate.queryForList("SELECT `name` FROM  sjakkarena.player WHERE tournament = " + tournamentId, String.class);
        return names;
    }
}
