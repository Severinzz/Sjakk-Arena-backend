{
	"info": {
		"_postman_id": "414765aa-c9be-4820-a022-3ac3b1deeed2",
		"name": "sjakkarena",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "PlayerAPITests",
			"item": [
				{
					"name": "Active tournament?",
					"item": [
						{
							"name": "Active tournament",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4fabe4cd-3631-4388-a676-c7c287a91a00",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Test that tournament is active\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.active).to.eql(true);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{playerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/player/tournament/active",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"player",
										"tournament",
										"active"
									]
								}
							},
							"response": []
						},
						{
							"name": "Active tournament player not in db",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4fabe4cd-3631-4388-a676-c7c287a91a00",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{playerNotInDBToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/player/tournament/active",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"player",
										"tournament",
										"active"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Add result",
					"item": [
						{
							"name": "Add result successfully",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "16e2970b-da17-4e09-b5f0-81118dfe3608",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{playerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/player/games/add-result?opponent=4&result=0.5",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"player",
										"games",
										"add-result"
									],
									"query": [
										{
											"key": "opponent",
											"value": "4"
										},
										{
											"key": "result",
											"value": "0.5"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Add result unsuccessfully no active games",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8371c07c-2402-410b-b7be-3af1fb8d9753",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"Player has no active games\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{playerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/player/games/add-result?opponent=2&result=0.5",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"player",
										"games",
										"add-result"
									],
									"query": [
										{
											"key": "opponent",
											"value": "2"
										},
										{
											"key": "result",
											"value": "0.5"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Add result unsuccessfully not a valid result",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8371c07c-2402-410b-b7be-3af1fb8d9753",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"Not a valid result\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{playerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/player/games/add-result?opponent=4&result=0.2",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"player",
										"games",
										"add-result"
									],
									"query": [
										{
											"key": "opponent",
											"value": "4"
										},
										{
											"key": "result",
											"value": "0.2"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Add result unsuccessfully missing param",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8371c07c-2402-410b-b7be-3af1fb8d9753",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{playerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/player/games/add-result",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"player",
										"games",
										"add-result"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Player's tournament",
					"item": [
						{
							"name": "Player set inactive",
							"item": [
								{
									"name": "Inactivate player successfully",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "6c1135ef-679d-42d7-92d9-75aea44bebb7",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{playerToken}}",
													"type": "string"
												}
											]
										},
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "http://localhost:8080/player/inactivate",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"player",
												"inactivate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Inactivate player not in DB",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "306df85f-b37a-40de-b842-4e301750689f",
												"exec": [
													"pm.test(\"Status code is 400\", function () {",
													"    pm.response.to.have.status(400);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{playerNotInDBToken}}",
													"type": "string"
												}
											]
										},
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "http://localhost:8080/player/inactivate",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"player",
												"inactivate"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "players tournament success",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5ea31171-fbb1-447f-b30f-5ccd62005975",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Tournament name is sjakkturnering\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.name).to.eql(\"sjakkturnering\");",
											"});",
											"",
											"pm.test(\"Tournament start\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.start).to.eql(\"2020-02-23 22:03:00\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{playerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/player/tournament",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"player",
										"tournament"
									]
								}
							},
							"response": []
						},
						{
							"name": "get players tournament invalid token",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5ab04b09-1d78-40bc-a7e8-450cfdc2f04f",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/player/tournament",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"player",
										"tournament"
									]
								}
							},
							"response": []
						},
						{
							"name": "get player not in dbs tournament",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ed528599-f8b8-47a0-a229-eeb585528934",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{playerNotInDBToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/player/tournament",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"player",
										"tournament"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Player's information",
					"item": [
						{
							"name": "get player's information success",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b6efc223-3470-4e86-ba1b-0c803cf27117",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Name test\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.name).to.eql(\"Ole\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{playerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/player",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"player"
									]
								}
							},
							"response": []
						},
						{
							"name": "get player's information player not in db",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b6efc223-3470-4e86-ba1b-0c803cf27117",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{playerNotInDBToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/player",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"player"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Pause player",
					"item": [
						{
							"name": "pause player success",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8a6a876b-085d-410c-bc96-f46a3312dad4",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{playerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/player/pause",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"player",
										"pause"
									]
								}
							},
							"response": []
						},
						{
							"name": "pause player not in DB",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8a6a876b-085d-410c-bc96-f46a3312dad4",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{playerNotInDBToken}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/player/pause",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"player",
										"pause"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Unpause player",
					"item": [
						{
							"name": "Unpause successfully",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ba7f614b-5394-4db7-ade0-11f391d4cb72",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{playerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/player/unpause",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"player",
										"unpause"
									]
								}
							},
							"response": []
						},
						{
							"name": "Unpause player not in db",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ba7f614b-5394-4db7-ade0-11f391d4cb72",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{playerNotInDBToken}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/player/unpause",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"player",
										"unpause"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Delete player",
					"item": [
						{
							"name": "New player",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ff0fed8d-2df4-4bc1-91c4-fa8519a6382d",
										"exec": [
											"pm.test(\"Successfully add user\", function(){",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"pm.test(\"Response should be json\", function(){",
											"    pm.response.to.be.json;",
											"});",
											"",
											"pm.globals.set(\"new_player_jwt\", pm.response.json().jwt)"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "dd0776c2-4d8b-4779-aa73-f0054dfe7792",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"Ola\", \n\t\"tournament\": {{tournamentId}}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/new-player",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"new-player"
									]
								}
							},
							"response": []
						},
						{
							"name": "New player Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ff0fed8d-2df4-4bc1-91c4-fa8519a6382d",
										"exec": [
											"pm.test(\"Successfully add user\", function(){",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"pm.test(\"Response should be json\", function(){",
											"    pm.response.to.be.json;",
											"});",
											"",
											"pm.globals.set(\"new_player_jwt\", pm.response.json().jwt)"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "dd0776c2-4d8b-4779-aa73-f0054dfe7792",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"Ola2\", \n\t\"tournament\": {{tournamentId}}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/new-player",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"new-player"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete player",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9d4c5963-6832-416c-bf26-e4ca6024a8b4",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{new_player_jwt}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/player/delete",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"player",
										"delete"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete player alrea",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{new_player_jwt}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/player/delete",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"player",
										"delete"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Inactive games",
					"item": [
						{
							"name": "Inactive games",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3bc28022-d4b3-478a-a8ca-cc925609bf1a",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{playerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/player/games/inactive",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"player",
										"games",
										"inactive"
									]
								}
							},
							"response": []
						},
						{
							"name": "Inactive games player not in db",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3bc28022-d4b3-478a-a8ca-cc925609bf1a",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Empty result\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.length).to.eql(0);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{playerNotInDBToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/player/games/inactive",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"player",
										"games",
										"inactive"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "TournamentAPITests",
			"item": [
				{
					"name": "Games in tournament",
					"item": [
						{
							"name": "Get games",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "38943b19-b621-444e-821b-6815e19a4991",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/tournament/games",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"tournament",
										"games"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get games players token",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "38943b19-b621-444e-821b-6815e19a4991",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{playerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/tournament/games",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"tournament",
										"games"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get games tournament not in db",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "38943b19-b621-444e-821b-6815e19a4991",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Empty result\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.length).to.eql(0);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{tournamentNotInDBToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/tournament/games",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"tournament",
										"games"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Start tournament",
					"item": [
						{
							"name": "Start tournament",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f46191c9-6b68-405d-9755-5326d4683059",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/tournament/start",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"tournament",
										"start"
									]
								}
							},
							"response": []
						},
						{
							"name": "Start tournament, tournament already started",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/tournament/start",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"tournament",
										"start"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Change game result",
					"item": [
						{
							"name": "change game result successfully",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4c724bb3-80bc-4c61-bd70-207b407bee2c",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/tournament/games/result/1/0.5/",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"tournament",
										"games",
										"result",
										"1",
										"0.5",
										""
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Tournament information",
					"item": [
						{
							"name": "tournament information by token",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "81854dc2-e943-469d-a5f7-f6ea555b7dad",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Name is sjakkturnering\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.tournament_name).to.eql(\"sjakkturnering\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/tournament",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"tournament"
									]
								}
							},
							"response": []
						},
						{
							"name": "tournament information by tournament not in db token",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "81854dc2-e943-469d-a5f7-f6ea555b7dad",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{tournamentNotInDBToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/tournament",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"tournament"
									]
								}
							},
							"response": []
						},
						{
							"name": "tournament information by player token",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "81854dc2-e943-469d-a5f7-f6ea555b7dad",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{playerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/tournament",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"tournament"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Inactive player",
					"item": [
						{
							"name": "Inactivate player",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3d015e1e-41f2-4e03-b58d-d2a744f93d9a",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "Tatt i juks!"
								},
								"url": {
									"raw": "http://localhost:8080/tournament/player/inactivate/2",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"tournament",
										"player",
										"inactivate",
										"2"
									]
								}
							},
							"response": []
						},
						{
							"name": "Inactivate player not in db",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3d015e1e-41f2-4e03-b58d-d2a744f93d9a",
										"exec": [
											"pm.test(\"Status code is 500\", function () {",
											"    pm.response.to.have.status(500);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "Tatt i juks!"
								},
								"url": {
									"raw": "http://localhost:8080/tournament/player/inactivate/9",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"tournament",
										"player",
										"inactivate",
										"9"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Get player",
					"item": [
						{
							"name": "get player",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c91443b8-d3c1-4217-9a2a-30fb190a1f61",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Name test\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.name).to.eql(\"Espen\");",
											"});",
											"",
											"pm.test(\"Tournament test\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.tournament_id).to.eql(530508);",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/tournament/player/4",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"tournament",
										"player",
										"4"
									]
								}
							},
							"response": []
						},
						{
							"name": "get player not in db",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c91443b8-d3c1-4217-9a2a-30fb190a1f61",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/tournament/player/9",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"tournament",
										"player",
										"9"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "UserManagementAPITests",
			"item": [
				{
					"name": "Sign in with adminUUID",
					"item": [
						{
							"name": "Sign in successfully",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "509b0e9a-3e0e-4639-b211-5cf286bcf9d2",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,200]);",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/sign-in/ugKon",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"sign-in",
										"ugKon"
									]
								}
							},
							"response": []
						},
						{
							"name": "Sign in with invalid adminUUID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c72b6d6e-c355-40cb-b38a-917f0d399cb0",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(404);",
											"});",
											"",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"Couldn't find a tournament with the given adminUUID \");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/sign-in/fsa3234",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"sign-in",
										"fsa3234"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "New tournament",
					"item": [
						{
							"name": "New tournament with end-time",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "969c89c1-6921-44c6-bfd0-2e4a8e4acb7b",
										"exec": [
											"pm.test(\"Successfully add tournament\", function (){",
											"   pm.response.to.have.status(200); ",
											"});",
											"",
											"pm.test(\"Response should be json\", function(){",
											"    pm.response.to.be.json;",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "51377409-85ea-46a3-b330-4bdc62345155",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"tournament_name\": \"test\",\n\t\"admin_email\": \"test@test.no\",\n\t\"start\": \"2020-02-23T20:01\",\n\t\"end\": \"2020-02-23T22:02\",\n\t\"tables\": 0,\n\t\"max_rounds\": 1,\n\t\"early_start\": \"true\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/new-tournament",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"new-tournament"
									]
								}
							},
							"response": []
						},
						{
							"name": "New tournament without end-time",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2e5287ed-9ef9-42c1-b767-be52a8047ea1",
										"exec": [
											"pm.test(\"Successfully add tournament\", function (){",
											"   pm.response.to.have.status(200); ",
											"});",
											"",
											"pm.test(\"Response should be json\", function(){",
											"    pm.response.to.be.json;",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"tournament_name\": \"test\",\n\t\"admin_email\": \"test@test.com\",\n\t\"start\": \"2020-02-23T20:01\",\n\t\"tables\": 4,\n\t\"max_rounds\": 3,\n\t\"early_start\": \"true\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/new-tournament",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"new-tournament"
									]
								}
							},
							"response": []
						},
						{
							"name": "New tournament  end-time before start time",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "874cc94d-3db8-4745-b737-a0b4d8fc1f95",
										"exec": [
											"pm.test(\"Unsuccessfully add tournament\", function (){",
											"   pm.response.to.have.status(400); ",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"tournament_name\": \"test\",\n\t\"admin_email\": \"test@test.com\",\n\t\"start\": \"2020-02-23T20:01\",\n\t\"end\": \"2020-02-23T19:45\",\n\t\"tables\": 4,\n\t\"max_rounds\": 3,\n\t\"early_start\": \"true\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/new-tournament",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"new-tournament"
									]
								}
							},
							"response": []
						},
						{
							"name": "New tournament no json",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "874cc94d-3db8-4745-b737-a0b4d8fc1f95",
										"exec": [
											"pm.test(\"Unsuccessfully add tournament\", function (){",
											"   pm.response.to.have.status(400); ",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "http://localhost:8080/new-tournament",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"new-tournament"
									]
								}
							},
							"response": []
						},
						{
							"name": "New tournament invalid email",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "969c89c1-6921-44c6-bfd0-2e4a8e4acb7b",
										"exec": [
											"pm.test(\"Non-valid email reponse code\", function (){",
											"   pm.response.to.have.status(400); ",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "51377409-85ea-46a3-b330-4bdc62345155",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"tournament_name\": \"test\",\n\t\"admin_email\": \"testtest.com\",\n\t\"start\": \"2020-02-23T20:01\",\n\t\"end\": \"2020-02-23T22:02\",\n\t\"tables\": 4,\n\t\"max_rounds\": 3,\n\t\"early_start\": \"true\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/new-tournament",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"new-tournament"
									]
								}
							},
							"response": []
						},
						{
							"name": "New tournament negative table number",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "969c89c1-6921-44c6-bfd0-2e4a8e4acb7b",
										"exec": [
											"pm.test(\"Negative number value response code\", function (){",
											"   pm.response.to.have.status(400); ",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "51377409-85ea-46a3-b330-4bdc62345155",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"tournament_name\": \"test\",\n\t\"admin_email\": \"test@test.com\",\n\t\"start\": \"2020-02-23T20:01\",\n\t\"end\": \"2020-02-23T22:02\",\n\t\"tables\": -4,\n\t\"max_rounds\": 3,\n\t\"early_start\": \"true\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/new-tournament",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"new-tournament"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "New player",
					"item": [
						{
							"name": "New player",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ff0fed8d-2df4-4bc1-91c4-fa8519a6382d",
										"exec": [
											"pm.test(\"Successfully add user\", function(){",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"pm.test(\"Response should be json\", function(){",
											"    pm.response.to.be.json;",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "dd0776c2-4d8b-4779-aa73-f0054dfe7792",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"Dole\", \n\t\"tournament\": {{tournamentId}}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/new-player",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"new-player"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add existing player",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b9db1908-a435-4761-aa17-df31ac11d017",
										"exec": [
											"pm.test(\"Add existing user response\", function(){",
											"    pm.response.to.have.status(409); ",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"Bjarne\",\n\t\"tournament\": {{tournamentId}}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/new-player",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"new-player"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add missing name/value pair",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4d703cc0-5a59-4c68-bb26-f313a6c60f20",
										"exec": [
											"pm.test(\"Add user missing name/value pair response code\", function(){",
											"    pm.response.to.have.status(400); ",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"playerName\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/new-player",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"new-player"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"variable": [
		{
			"id": "5edd9548-a7b8-4fd2-b085-dc99ca9e0ab4",
			"key": "tournamentId",
			"value": 535937,
			"type": "number"
		},
		{
			"id": "629c7a08-dc55-4b0a-9be3-8eb3cc1c7caa",
			"key": "jwt",
			"value": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJUT1VSTkFNRU5UIiwianRpIjoiMjA2MTYwIn0.yDz2PB9ij8E5TgWMUaKwyOPaPkrTA25f56D6tW3crPc",
			"type": "string"
		},
		{
			"id": "084bdab3-e69c-4613-b38c-7fa479c8568c",
			"key": "playerName",
			"value": "mCarlsen",
			"type": "string"
		},
		{
			"id": "3fd69dc2-7574-4a6d-aefb-4b774e3dfd38",
			"key": "tournamentJwt",
			"value": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJUT1VSTkFNRU5UIiwianRpIjoiNTM1OTM3In0.wct6xzanPitCfQ7nSMa4KMq1bIsFnp0vthRcZhRhG18",
			"type": "string"
		},
		{
			"id": "4ef583b3-dfbb-47ea-b151-90135e60e7fa",
			"key": "playerJwt",
			"value": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJQTEFZRVIiLCJqdGkiOiI2In0.yzYL_ydia9riWSFzSQMa7Kr9EIxSGyEeVVkxfOIdQ_E",
			"type": "string"
		}
	]
}
